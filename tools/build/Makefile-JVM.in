JAVA    = java
JAVAC   = javac
JAR     = jar
J_NQP   = @j_nqp@
J_GEN_CAT = tools/build/gen-cat.nqp jvm

NQP_PREFIX = @nqp_prefix@

J_BUILD_DIR = gen/jvm

J_LIBPATH = @nqp_libdir@

NQP_JARS = @nqp_jars@
BLD_NQP_JARS = @bld_nqp_jars@

J_RUN_NQP_RR = $(JAVA) -Xss1m -Xms500m -Xmx2000m -cp .@cpsep@$(BLD_NQP_JARS)@cpsep@rakudo-runtime.jar@cpsep@$(SYSROOT)@nqp_classpath@ nqp
J_RUN_PERL6 = $(JAVA) -Xss1m -Xms500m -Xmx2000m -cp .@cpsep@$(BLD_NQP_JARS)@cpsep@rakudo-runtime.jar@cpsep@perl6.jar@cpsep@$(SYSROOT)@nqp_classpath@ perl6

RUNTIME_JAVAS = src/vm/jvm/runtime/org/perl6/rakudo/*.java

RUNTIME_JAR = rakudo-runtime.jar

J_BAT    = @runner_suffix@
J_RUNNER = @j_runner@

# files we create
PERL6_JAR     = perl6.jar
PERL6_ML_JAR  = blib/Perl6/ModuleLoader.jar
PERL6_W_JAR   = blib/Perl6/World.jar
PERL6_G_JAR   = blib/Perl6/Grammar.jar
PERL6_OPS_JAR = blib/Perl6/Ops.jar
PERL6_A_JAR   = blib/Perl6/Actions.jar
PERL6_O_JAR   = blib/Perl6/Optimizer.jar
PERL6_P_JAR   = blib/Perl6/Pod.jar
PERL6_DP_JAR  = blib/Perl6/DebugPod.jar
PERL6_C_JAR   = blib/Perl6/Compiler.jar
PERL6_M_JAR   = blib/Perl6/Metamodel.jar
PERL6_B_JAR   = blib/Perl6/BOOTSTRAP.jar
SETTING_JAR   = CORE.setting.jar
SETTING_D_JAR = CORE.d.setting.jar

PERL6_LANG_JARS = $(PERL6_ML_JAR) $(PERL6_W_JAR) $(PERL6_G_JAR) $(PERL6_OPS_JAR) $(PERL6_A_JAR) \
  $(PERL6_O_JAR) $(PERL6_P_JAR) $(PERL6_C_JAR) $(PERL6_M_JAR) $(PERL6_B_JAR) $(PERL6_DP_JAR)

J_METAMODEL_SOURCES = $(COMMON_BOOTSTRAP_SOURCES) \
  src/vm/jvm/Perl6/Metamodel/JavaHOW.nqp \

# The ordering here is important for bootstrapping reasons. In general:
# * traits almost certainly have to come first
# * stubs have to come after traits since they use them
# * Attribute needs to come before anything that uses an attribute
# We break various other circularities in Perl6::Metamodel::BOOTSTRAP.
# Note that you only really have to worry especially about things that
# the compiler will instantiate/call methods on while compiling the
# setting - basically anything that feels MOP-ish.
J_CORE_SOURCES = \
  @jvm_core_sources@

J_CORE_D_SOURCES = \
  @jvm_core_d_sources@

PERL6_DEBUG_JAR = perl6-debug.jar
J_DEBUG_RUNNER = perl6-debug-j@runner_suffix@

J_CLEANUPS = \
  *.manifest \
  blib/Perl6/*.jar \
  $(SETTING_JAR) \
  $(SETTING_D_JAR) \
  $(PERL6_JAR) \
  j-rakudo_test_run.tar.gz \
  $(J_BUILD_DIR)/* \
  $(RUNTIME_JAR) \
  perl6-eval-server \
  perl6-jdb-server \
  eval-client.pl \
  $(J_RUNNER) \
  $(PERL6_DEBUG_JAR) \
  $(J_DEBUG_RUNNER) \

HARNESS_TYPE =

J_HARNESS5 = $(PERL5) t/harness5 --jvm
J_HARNESS5_WITH_FUDGE = $(J_HARNESS5) --fudge --keep-exit-code

j-all: $(PERL6_JAR) $(SETTING_JAR) $(SETTING_D_JAR) $(J_RUNNER) eval-client.pl  $(PERL6_DEBUG_JAR) $(J_DEBUG_RUNNER)

$(RUNTIME_JAR): $(RUNTIME_JAVAS)
	$(MKPATH) bin
	$(JAVAC) -source 1.7 -cp $(BLD_NQP_JARS) -g -d bin -encoding UTF8 $(RUNTIME_JAVAS)
	$(JAR) cf0 rakudo-runtime.jar -C bin/ .

$(PERL6_ML_JAR): src/Perl6/ModuleLoader.nqp src/vm/jvm/ModuleLoaderVMConfig.nqp src/vm/jvm/Perl6/JavaModuleLoader.nqp
	$(J_NQP) $(J_GEN_CAT) src/vm/jvm/ModuleLoaderVMConfig.nqp src/Perl6/ModuleLoader.nqp src/vm/jvm/Perl6/JavaModuleLoader.nqp > $(J_BUILD_DIR)/ModuleLoader.nqp
	$(J_NQP) --module-path=blib --target=jar --output=$(PERL6_ML_JAR) --encoding=utf8 \
	    $(J_BUILD_DIR)/ModuleLoader.nqp

$(PERL6_OPS_JAR): src/vm/jvm/Perl6/Ops.nqp
	$(J_NQP) --module-path=blib --target=jar --output=$(PERL6_OPS_JAR) --encoding=utf8 \
	    src/vm/jvm/Perl6/Ops.nqp

$(PERL6_W_JAR): $(PERL6_ML_JAR) $(PERL6_OPS_JAR) $(PERL6_P_JAR) src/Perl6/World.nqp
	$(J_NQP) --module-path=blib --target=jar --output=$(PERL6_W_JAR) --encoding=utf8 \
	    src/Perl6/World.nqp

$(PERL6_P_JAR): src/Perl6/Pod.nqp $(PERL6_DP_JAR)
	$(J_NQP) --module-path=blib --target=jar --output=$(PERL6_P_JAR) --encoding=utf8 \
	    src/Perl6/Pod.nqp

$(PERL6_DP_JAR): src/Perl6/DebugPod.nqp
	$(J_NQP) --module-path=blib --target=jar --output=$(PERL6_DP_JAR) --encoding=utf8 \
	    src/Perl6/DebugPod.nqp

$(PERL6_A_JAR): src/Perl6/Actions.nqp $(PERL6_P_JAR) $(PERL6_OPS_JAR)
	$(J_NQP) $(J_GEN_CAT) src/Perl6/Actions.nqp > $(J_BUILD_DIR)/Perl6-Actions.nqp
	$(J_NQP) --module-path=blib --target=jar --output=$(PERL6_A_JAR) --encoding=utf8 \
	    $(J_BUILD_DIR)/Perl6-Actions.nqp

$(PERL6_G_JAR): src/Perl6/Grammar.nqp $(PERL6_W_JAR) $(PERL6_A_JAR) $(PERL6_P_JAR)
	$(J_NQP) --module-path=blib --target=jar --output=$(PERL6_G_JAR) --encoding=utf8 \
	    src/Perl6/Grammar.nqp

$(PERL6_O_JAR): src/Perl6/Optimizer.nqp $(PERL6_OPS_JAR)
	$(J_NQP) $(J_GEN_CAT) src/Perl6/Optimizer.nqp > $(J_BUILD_DIR)/Perl6-Optimizer.nqp
	$(J_NQP) --module-path=blib --target=jar --output=$(PERL6_O_JAR) --encoding=utf8 \
	    $(J_BUILD_DIR)/Perl6-Optimizer.nqp

$(PERL6_C_JAR): src/Perl6/Compiler.nqp $(PERL6_O_JAR)
	$(J_NQP) --module-path=blib --target=jar --output=$(PERL6_C_JAR) --encoding=utf8 \
	    src/Perl6/Compiler.nqp

$(PERL6_JAR): src/main.nqp $(RUNTIME_JAR) $(PERL6_G_JAR) $(PERL6_A_JAR) $(PERL6_C_JAR) $(PERL6_P_JAR) $(PERL6_DP_JAR)
	$(PERL5) tools/build/gen-version.pl $(PREFIX) > $(J_BUILD_DIR)/main-version.nqp
	$(J_NQP) $(J_GEN_CAT) src/main.nqp $(J_BUILD_DIR)/main-version.nqp > $(J_BUILD_DIR)/main.nqp
	$(J_NQP) --module-path=blib --target=jar --javaclass=perl6 --output=$(PERL6_JAR) \
	    $(J_BUILD_DIR)/main.nqp

$(PERL6_M_JAR): $(J_METAMODEL_SOURCES) $(PERL6_OPS_JAR)
	$(J_NQP) $(J_GEN_CAT) $(J_METAMODEL_SOURCES) > $(J_BUILD_DIR)/Metamodel.nqp
	$(J_NQP) --module-path=blib --target=jar --output=$(PERL6_M_JAR) --encoding=utf8 \
	    $(J_BUILD_DIR)/Metamodel.nqp

$(PERL6_B_JAR): $(BOOTSTRAP_SOURCES) $(PERL6_M_JAR)
	$(J_NQP) $(J_GEN_CAT) $(BOOTSTRAP_SOURCES) > $(J_BUILD_DIR)/BOOTSTRAP.nqp
	$(J_RUN_NQP_RR) --module-path=blib --target=jar --output=$(PERL6_B_JAR) --encoding=utf8 $(J_BUILD_DIR)/BOOTSTRAP.nqp

$(SETTING_JAR): $(PERL6_JAR) $(PERL6_B_JAR) $(J_CORE_SOURCES)
	$(J_NQP) $(J_GEN_CAT) -f tools/build/jvm_core_sources > $(J_BUILD_DIR)/CORE.setting
	@echo "The following step can take a long time, please be patient."
	NQP_LIB=blib $(J_RUN_PERL6) --setting=NULL --ll-exception --optimize=3 --target=jar --stagestats --output=$(SETTING_JAR) --nqp-lib=blib $(J_BUILD_DIR)/CORE.setting

$(SETTING_D_JAR): $(PERL6_JAR) $(PERL6_B_JAR) $(SETTING_JAR) $(J_CORE_SOURCES)
	$(J_NQP) $(J_GEN_CAT) $(J_CORE_D_SOURCES) > $(J_BUILD_DIR)/CORE.d.setting
	@echo "The following step can take a long time, please be patient."
	NQP_LIB=blib $(J_RUN_PERL6) --ll-exception --optimize=3 --target=jar --stagestats --output=$(SETTING_D_JAR) --nqp-lib=blib $(J_BUILD_DIR)/CORE.d.setting

$(J_RUNNER):    tools/build/create-jvm-runner.pl
	$(PERL5) tools/build/create-jvm-runner.pl dev . . $(NQP_PREFIX) --nqp-lib=blib $(NQP_JARS)

j-runner-default: j-all
	$(CP) $(J_RUNNER) perl6$(J_BAT)
	$(CHMOD) 755 perl6$(J_BAT)

$(PERL6_DEBUG_JAR): src/perl6-debug.nqp $(PERL6_JAR)
	$(J_NQP) $(J_GEN_CAT) src/perl6-debug.nqp $(J_BUILD_DIR)/main-version.nqp > $(J_BUILD_DIR)/perl6-debug.nqp
	$(J_NQP) --module-path=blib --target=jar --javaclass=perl6-debug --output=$(PERL6_DEBUG_JAR) \
	    $(J_BUILD_DIR)/perl6-debug.nqp

$(J_DEBUG_RUNNER): tools/build/create-jvm-runner.pl $(PERL6_DEBUG_JAR)
	$(PERL5) tools/build/create-jvm-runner.pl dev-debug . . $(NQP_PREFIX) --nqp-lib=blib $(NQP_JARS)

eval-client.pl:
	$(CP) $(SDKROOT)$(NQP_PREFIX)/bin/eval-client.pl .

##  testing targets
j-test    : j-coretest

j-fulltest: j-coretest j-stresstest

j-coretest: j-all
	$(J_HARNESS5) t/01-sanity t/03-jvm t/04-nativecall

# Run the spectests that we know work.
j-spectest: j-testable t/spectest.data
	$(J_HARNESS5_WITH_FUDGE) --tests-from-file=t/spectest.data

j-spectest_full: j-testable
	$(J_HARNESS5_WITH_FUDGE) t/spec

j-quicktest: j-testable t/spectest.data
	$(J_HARNESS5_WITH_FUDGE) --tests-from-file=t/spectest.data --quick

j-stresstest: j-testable t/spectest.data
	$(J_HARNESS5_WITH_FUDGE) --tests-from-file=t/spectest.data --stress

j-rakudo_test_run.tar.gz: j-testable t/spectest.data
	- $(J_HARNESS5_WITH_FUDGE) --tests-from-file=t/spectest.data --archive j-rakudo_test_run.tar.gz

#spectest_smolder: rakudo_test_run.tar.gz
#	./perl6 -e "shell qqx[git log -1 --pretty=format:%H].fmt(qq[curl -F architecture=@cpuarch@ -F platform=@osname@ -F revision=%s -F report_file=@rakudo_test_run.tar.gz -F username=parrot-autobot -F password=qa_rocks http://smolder.parrot.org/app/projects/process_add_report/5])"

j-testable : j-all spectest_checkout spectest_update


# Run the tests in t/localtest.data
j-localtest: j-all spectest_checkout t/localtest.data
	@$(J_HARNESS5_WITH_FUDGE) --tests-from-file=t/localtest.data

# Run the tests in t/localtest.data with a higher verbosity
j-localtest_loud: j-all spectest_checkout t/localtest.data
	@$(J_HARNESS5_WITH_FUDGE) --tests-from-file=t/localtest.data --verbosity=1

# Run many tests of your choice.
# make sometests TESTFILES=t/foo/bar
sometests: j-all
	@$(J_HARNESS5_WITH_FUDGE) $(TESTFILES)

j-install: j-all tools/build/create-jvm-runner.pl tools/build/install-core-dist.pl
	$(MKPATH) $(DESTDIR)$(PREFIX)/bin
	$(MKPATH) $(DESTDIR)$(J_LIBPATH)/Perl6
	$(MKPATH) $(DESTDIR)$(PERL6_LANG_DIR)/runtime
	$(CP) $(PERL6_LANG_JARS) $(DESTDIR)$(J_LIBPATH)/Perl6
	$(CP) $(SETTING_JAR) $(SETTING_D_JAR) $(DESTDIR)$(PERL6_LANG_DIR)/runtime
	$(CP) $(PERL6_JAR) $(DESTDIR)$(PERL6_LANG_DIR)/runtime
	$(CP) $(PERL6_DEBUG_JAR) $(DESTDIR)$(PERL6_LANG_DIR)/runtime
	$(CP) $(RUNTIME_JAR) $(DESTDIR)$(PERL6_LANG_DIR)/runtime
	.@slash@$(J_RUNNER) tools/build/upgrade-repository.pl $(DESTDIR)$(PERL6_LANG_DIR)
	$(MKPATH) $(DESTDIR)$(PERL6_LANG_DIR)/vendor
	.@slash@$(J_RUNNER) tools/build/upgrade-repository.pl $(DESTDIR)$(PERL6_LANG_DIR)/vendor
	$(MKPATH) $(DESTDIR)$(PERL6_LANG_DIR)/site
	.@slash@$(J_RUNNER) tools/build/upgrade-repository.pl $(DESTDIR)$(PERL6_LANG_DIR)/site
	.@slash@$(J_RUNNER) tools/build/install-core-dist.pl $(DESTDIR)$(PERL6_LANG_DIR)
	$(PERL5) tools/build/create-jvm-runner.pl install "$(DESTDIR)" $(PREFIX) $(NQP_PREFIX) --nqp-lib=blib $(NQP_JARS)
	$(PERL5) tools/build/create-jvm-runner.pl install-debug "$(DESTDIR)" $(PREFIX) $(NQP_PREFIX) --nqp-lib=blib $(NQP_JARS)

j-runner-default-install: j-install
	$(PERL5) tools/build/create-jvm-runner.pl install "$(DESTDIR)" $(PREFIX) $(NQP_PREFIX) --nqp-lib=blib $(NQP_JARS)
	$(CP) $(DESTDIR)$(PREFIX)/bin/perl6-j$(J_BAT) $(DESTDIR)$(PREFIX)/bin/perl6$(J_BAT)
	$(CHMOD) 755 $(DESTDIR)$(PREFIX)/bin/perl6$(J_BAT)

##  cleaning
j-clean:
	$(RM_F) $(J_CLEANUPS)
	$(RM_RF) bin

j-testclean:
