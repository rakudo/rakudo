GEN_OBJ = $(BINDIR)/parrot$(EXE)
GEN_PERL6_IR_ARGS = $(VMLIBS)
GEN_RUNNER = $(BINDIR)/pbc_to_exe$(EXE)
GEN_B_IR =
VMLIBS = --vmlibs=perl6_ops
VM = parrot
IR = pir
IREXT = .$(IR)
BCEXT = .pbc
LIB = lib
TEST_BLIB = $(LIB)
BLIB = blib
RUNTIME_DIR = $(LIB)
PERL6_LANG_DIR_PREFIX = $(PARROT_LIB_DIR)
PERL6_RUNTIME_DIR =
RUN_PERL6 = ./$(RUNNER)
HARNESS_ARGS = --icu=$(HAS_ICU)
VM_REVISION_ARGS = --parrot_revision=@git_describe@
VM_RUNTIME_OBJ =
VM_DYNOPS = $(DYNEXT_DYNOPS)
VM_METAMODEL_SOURCES = \
  src/Perl6/Metamodel/ParrotInterop.nqp
VM_CLEANUPS = \
  *.pdb \
  perl6.c \
  perl6$(O) \
  perl6_group.* \
  $(DYNEXT_DIR)/*$(LOAD_EXT) \
  $(OPS_DIR)/*.h \
  $(OPS_DIR)/*.c \
  $(OPS_DIR)/*$(O) \
  $(OPS_DIR)/*$(LOAD_EXT) \
  src/vm/parrot/guts/*$(O)

@make_dllcopy@

# values from parrot_config
PARROT_VERSION     = @versiondir@
PARROT_INCLUDE_DIR = @includedir@$(PARROT_VERSION)
PARROT_LIB_DIR     = @libdir@$(PARROT_VERSION)
PARROT_SRC_DIR     = @srcdir@$(PARROT_VERSION)
PARROT_LIB_SHARED  = @libparrot_shared@
HAS_ICU            = @has_icu@

CC            = @cc@
CFLAGS        = @ccflags@ @cc_shared@ @cc_debug@ @ccwarn@ @gc_flag@ @optimize@
LD            = @ld@
LDFLAGS       = @ldflags@ @ld_debug@
LD_LOAD_FLAGS = @ld_load_flags@
LIBPARROT     = @inst_libparrot_ldflags@
O             = @o@
LOAD_EXT      = @load_ext@
POD2MAN       = @pod2man@

# locations of parrot resources
PARROT_DLL = @dll@
OPS2C      = $(BINDIR)/ops2c$(EXE)
CINCLUDES  = -I$(PARROT_INCLUDE_DIR) -I$(PARROT_INCLUDE_DIR)/pmc
LINKARGS   = $(LDFLAGS) $(LD_LOAD_FLAGS) $(LIBPARROT) @libs@ @icu_shared@

# rakudo directories
DYNEXT_DIR = dynext
OPS_DIR    = src/vm/parrot/ops
# FIXME: MANDIR and associated installations should be made portable
MANDIR         = @mandir@

# files we create
GROUP         = perl6_group
OPS           = perl6_ops
DYNEXT_DYNOPS = $(DYNEXT_DIR)/$(OPS)$(LOAD_EXT)
DYNOPS        = $(OPS_DIR)/$(OPS)$(LOAD_EXT)

OPS_SOURCE = perl6.ops

install: install-general
	$(MKPATH)            $(PARROT_LIB_DIR)/dynext
	$(CP)     $(DYNOPS)  $(PARROT_LIB_DIR)/dynext
	$(CP)     $(RUNNER)  $(DESTDIR)$(BINDIR)
	$(CHMOD)  755        $(DESTDIR)$(BINDIR)/$(RUNNER)
	$(MKPATH) $(DESTDIR)$(MANDIR)/man1
	-$(POD2MAN) docs/running.pod --name=perl6 > $(DESTDIR)$(MANDIR)/man1/perl6.1
	-$(POD2MAN) docs/running.pod --name=rakudo > $(DESTDIR)$(MANDIR)/man1/rakudo.1

spectest_smolder: rakudo_test_run.tar.gz
	./perl6 -e "shell qqx[git log -1 --pretty=format:%H].fmt(qq[curl -F architecture=@cpuarch@ -F platform=@osname@ -F revision=%s -F report_file=@rakudo_test_run.tar.gz -F username=parrot-autobot -F password=qa_rocks http://smolder.parrot.org/app/projects/process_add_report/5])"

$(DYNEXT_DYNOPS): $(DYNOPS)
	$(CP) $(DYNOPS) $(DYNEXT_DIR)
	$(CHMOD) 755 $(DYNEXT_DYNOPS)

# (at)cc_o_out(at) and (at)ld_out(at) below cannot be assigned to
# makefile macros, because some make utilities drop the trailing
# spaces and some compilers/linkers forbid a (forced) space.
# See RT #66558 and TT #700.

$(DYNOPS): $(OPS_DIR)/$(OPS_SOURCE) src/vm/parrot/guts/bind.c src/vm/parrot/guts/bind.h src/vm/parrot/guts/container.c src/vm/parrot/guts/container.h src/vm/parrot/guts/types.c src/vm/parrot/guts/types.h src/vm/parrot/guts/sixmodelobject.h src/vm/parrot/guts/storage_spec.h src/vm/parrot/guts/exceptions.h src/vm/parrot/guts/exceptions.c
	cd $(OPS_DIR) && $(OPS2C) C --dynamic $(OPS_SOURCE)
	cd $(OPS_DIR) && $(CC) -c @cc_o_out@$(OPS)$(O) $(CINCLUDES) $(CFLAGS) $(OPS).c
	cd src/vm/parrot/guts && $(CC) -c @cc_o_out@exceptions$(O) $(CINCLUDES) $(CFLAGS) exceptions.c
	cd src/vm/parrot/guts && $(CC) -c @cc_o_out@bind$(O) $(CINCLUDES) $(CFLAGS) bind.c
	cd src/vm/parrot/guts && $(CC) -c @cc_o_out@container$(O) $(CINCLUDES) $(CFLAGS) container.c
	cd src/vm/parrot/guts && $(CC) -c @cc_o_out@types$(O) $(CINCLUDES) $(CFLAGS) types.c
	cd $(OPS_DIR) && $(LD) @ld_out@$(OPS)$(LOAD_EXT) $(OPS)$(O) ../guts/bind$(O) ../guts/exceptions$(O) ../guts/container$(O) ../guts/types$(O) $(LINKARGS)

# nqp::makefile
